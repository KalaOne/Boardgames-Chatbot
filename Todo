Bugs [sorted?]:
    B) [n] help -> "asdasdasd" -> yes. Doesn't accept the first "yes/no"
    B) [n] self.boardgame doesn't get updated with correct game. 
    B) [n] 
    -----------------------
    B) [y] Information/Info not always display the initial message - "Game_inf:Ok let's get you informed"
    B) [y] Can't modify facts more than once in a single function. - If "help" - modify f1, else modify f1 
    B) [y] Chat engine seems to continue from the previous state. Example if ask same question twice - "How to play" //// Can not represent
    B) [y] Not resetting states. Using previous state on refresh page.
    B) [y] When type something fact related, response is a new localhost page, without any structure or styles -- static\bugs\new page display without structure.JPG
    B) [y] Can't display images on bot. It doesn't appear in the circle.


Go to through levels of journey : 1->2->3->4 - in 4) set a particular fact to one needed in 3) and 3) should handle it from there.





LAST PLACE LEFT OFF>>>
    Problem: Help -> "asdasdasd" -> yes. Have to input "yes" twice. Investigate.
    Problem: Scythe -> Information -> General/specific. Have to write "general/specific" twice.
    Description is not being stripped from HTML/C# stuff
    
Currently working on:
    "Information"
    


NEXT:
    Finish Suggest a game journey
    Game info journey. Ask if user wants to get specific info, else display most valuable. Pull data for that game. DELIVER


ToDo:
    Functionality:
        - CREATE JOURNEY!
            =1) Help -[Y]
            =2) "Suggest a game to me" 
                2.1) Here use the labels for question/response. -> Genre? Sub-Genre? Play time? Num_Players?
                2.2) Whole journey -> 
                    0) FIRST ASK USER IF THEY HAVE SPECIFIC THING THEY LOOK FOR(expansion or something? --Confusing I know =(  )
                        A) Write exactly what they're looking for 
                    1) General suggestion
                        B) Have Genre; Have Play Time; Have Max Players; Have rating -> Suggest game with That
                        C) Don't know some of the above. Try to get different information?
                    
                     

            =3) "I know a game -> input a specific game name" -> continue with the journey.

        - Compare name of game user has entered. Check if exists in the DB. If typo, suggest it to the user.
        - Add more functionality - different functions actions, utilise the data more - Reviews

    Journey:
        - User gaming experience journey
        - Suggestions for games based on the user experience?? Is it possible? How will I classify games? Maybe ask for user for games they like and suggest similar from "People also like...." type of thing?
          Investigate what's available for new people.

    Styling:
        - Reflective background for different games. 

    Ideas:
    - Find a way to add game codes in the DB for each game => That returns https://www.boardgamegeek.com/boardgame/?/GAME_NAME. Use it to add games. ? = int.
    
    Testing:
        - DB returns correct answers
        - Scraping?
        - Conversation flow 
   
Complete:
+ Pull lots of game names into the DB





1) Get API call for information about the game [Y]
    1.1) General information
    1.2) Instructions
    1.3) Reviews
    1.4 Help

2) Chat  [Y]
    2.1) Different intents to have differente responses - multi if statements for now
    2.2) Each action to make API call and print out data related to the intent
        2.2.1) Scrape API
        2.2.2) Clear data from tags and other rubbish
        2.2.3) Based on user intent, return specific data.

3) List of many games [Y]
    3.1) pull game names into DB
    3.2) Ask user for specific game


How to?: 
    >> create <ul> in python to be displayed to UI?
    >> What happens when awaiting user input without changing action? Example - "I don't support X. Type help for more."
    
    >> detect different types of intent? - Instructions or Reviews or GeneralInformation --- nested if statements
    >> If update_messages has priority=1, it shows ONLY THAT MESSAGE [Y] - Because of response_required.
    >> follow-up on "Anything else?"
        -- using tags for user intent to detect if they need more information.
        -- "return? " -> user response {TAG}*user_response* 



